# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      minimum-version: ${{ steps.minver.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - name: Read package.json
      id: package
      # Reads the contents of `package.json` into `steps.package.outputs.content`
      run: |
        {
          echo 'content<<EOF'
          cat ./package.json
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
    - name: Extract minimum version
      id: minver
      # Reads the contents of the `engines.vscode` field into `steps.minver.outputs.version` with the leading ^ removed.
      run: |
        version=${{ fromJson(steps.package.outputs.content).engines.vscode }}
        version=${version#^}
        echo "version=$version" >> "$GITHUB_OUTPUT"

  check:
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      matrix:
        vscode-version:
        - ${{ needs.configure.outputs.minimum-version }}
        - stable
        node-version:
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        - 18.x
        - 20.x

    steps: 
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: npm ci
    - name: Run tests on VS Code ${{ matrix.vscode-version }}
      run: xvfb-run -a npm test
      env: 
        VSCODE_VERSION: ${{ matrix.vscode-version }}
    - name: Package extension
      run: npx --yes @vscode/vsce package
