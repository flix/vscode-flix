name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '20.x'
  JDK_VERSION: '21'

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      minimum-version: ${{ steps.minver.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - name: Read package.json
      id: package
      # Reads the contents of `package.json` into `steps.package.outputs.content`
      run: |
        {
          echo 'content<<EOF'
          cat ./package.json
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
    - name: Extract minimum version
      id: minver
      # Reads the contents of the `engines.vscode` field into `steps.minver.outputs.version` with the leading ^ removed.
      run: |
        version=${{ fromJson(steps.package.outputs.content).engines.vscode }}
        version=${version#^}
        echo "version=$version" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      matrix:
        vscode-version:
        - ${{ needs.configure.outputs.minimum-version }}
        - stable

    steps: 
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ env.JDK_VERSION }}
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run tests on VS Code ${{ matrix.vscode-version }}
      run: xvfb-run -a npm test
      env: 
        VSCODE_VERSION: ${{ matrix.vscode-version }}
  
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Package extension
      run: npx --yes @vscode/vsce package
  
  check-style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Check code formatting
      run: npx --yes prettier . --check
    - name: Run linter
      run: npx --yes eslint .
